name: Neovim Startuptime

on:
  push:
    branches:
      - 'main'
  pull_request:


env:
  GIST_TOKEN: ${{ secrets.GIST_TOKEN }}

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Neovim
        id: 'neovim'
        uses: thinca/action-setup-vim@v2
        with:
          vim_version: 'stable'
          vim_type: 'neovim'
      - name: Show Vim version
        run: |
          ${{ steps.neovim.outputs.executable }} --version
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          # disable cache as this repository does not have go.sum.
          cache: 'false'
      - name: Setup vim-startuptime
        run: |
          go install github.com/rhysd/vim-startuptime@latest
      - name: Setup init.lua
        run: |
          cp -rf ./config/nvim ~/.config
      - name: Run vim-startuptime
        run: |
          vim-startuptime -vimpath ${{ steps.neovim.outputs.executable }} -count 300 -warmup 50 -script >> output.txt
          echo total_average_time=$(cat output.txt | grep 'Total Average:' | awk '{printf "%.2f %s", $3, $4}') >> $GITHUB_ENV
      - name: Update badge
        run: |
          json=$(echo "{\"files\":{\"vim-startuptime.json\":{\"content\":\"{\\\"schemaVersion\\\":1,\\\"style\\\":\\\"for-the-badge\\\",\\\"label\\\":\\\"startuptime\\\",\\\"message\\\":\\\"${{ env.total_average_time }}\\\",\\\"logoColor\\\":\\\"#019733\\\",\\\"color\\\":\\\"brightgreen\\\",\\\"namedLogo\\\":\\\"neovim\\\"}\"}}}")
          curl -s -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GIST_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/gists/093763e63c107ab23ebef0133c42e039 \
            -d "$json"
      - name: Create GitHub Step Summary
        run: |
          echo '### Neovim Startup Time Result ðŸš€' >> $GITHUB_STEP_SUMMARY
          echo "| AVERAGE   | MAX     | MIN     | FILE        |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|---------|---------|-------------|" >> $GITHUB_STEP_SUMMARY
          # extract the necessary lines from the output and process them in Markdown format.
          grep -E '^[[:space:]]*[0-9]' "output.txt" | while read -r line; do
              echo "$line"
              average=$(echo "$line" | awk '{print $1}')
              max=$(echo "$line" | awk '{print $2}')
              min=$(echo "$line" | awk '{print $3}' | sed 's/:$//')
              file=$(echo "$line" | awk '{$1=$2=$3=""; print $0}' | sed 's/^ *//')
              echo "| $average | $max | $min | $file |" >> $GITHUB_STEP_SUMMARY
          done
